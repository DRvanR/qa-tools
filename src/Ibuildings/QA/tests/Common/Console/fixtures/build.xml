<?xml version="1.0" encoding="UTF-8"?>

<project name="test1-ci" default="build">

    <target name="build"
            depends="prepare,composer-run-install,php-lint-ci,phpmd-ci,phpcs-ci,phpcpd-ci,php-security-checker,phpunit-ci,behat-ci"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="/test2/etstter/coverage"/>
        <delete dir="/test2/etstter/logs"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="/test2/etstter/coverage"/>
        <mkdir dir="/test2/etstter/logs"/>
    </target>

    <target name="check-composer">
        <available file="composer.phar" property="composer.installed"/>
    </target>

    <target name="composer-install" depends="check-composer" unless="composer.installed">
        <get src="http://getcomposer.org/composer.phar" dest="composer.phar"/>
    </target>

    <target name="composer-update" depends="composer-install">
        <exec executable="php" failonerror="true">
            <arg line="composer.phar self-update"/>
        </exec>
    </target>

    <target name="composer-run-install" depends="composer-update">
        <exec executable="php" failonerror="true">
            <arg line="composer.phar install --dev"/>
        </exec>
    </target>

    <target name="get-changeset.php.raw"
            description="creates a list of changed php files separated by newline">
        <pathconvert property="changeset.php.raw" pathsep="${line.separator}">
            <fileset dir="/tmp">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </pathconvert>

        <!--Check if files are modified-->
        <condition property="changeset.php.notempty">
            <not>
                <equals arg1="${changeset.php.raw}" arg2="" trim="true"/>
            </not>
        </condition>
    </target>

    <target name="get-changeset.php.spacesep" depends="get-changeset.php.raw" if="changeset.php.notempty"
            description="Creates a quoted list of changed php files separated by spaces">
        <loadresource property="changeset.php.spacesep">
            <propertyresource name="changeset.php.raw"/>
            <filterchain>
                <tokenfilter delimoutput=" ">
                    <linetokenizer/>
                    <replaceregex pattern="^" replace='"'/>
                    <replaceregex pattern="$" replace='"'/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </target>

    <target name="php-lint-ci" depends="get-changeset.php.spacesep" if="changeset.php.notempty"
            description="Perform syntax check of sourcecode files in parallel">
        <exec executable="sh" failonerror="true">
            <arg value="-c"/>
            <arg value="echo '${changeset.php.spacesep}' | xargs -n 1 -P 4 php -l 1>/dev/null"/>
        </exec>
        <echo message="OK"/>
    </target>


    <target name="php-security-checker" description="Check your composer dependencies for insecure components">
        <exec executable="vendor/bin/security-checker" failonerror="false">
            <arg value="security:check"/>
            <arg value="--verbose"/>
            <arg value="composer.lock"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="vendor/bin/phpmd" failonerror="true">
            <arg path="/tmp"/>
            <arg value="xml"/>
            <arg value="phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="/test2/etstter/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="vendor/bin/phpcs" failonerror="true">
            <arg value="--report-checkstyle=/test2/etstter/logs/checkstyle-php.xml"/>
            <arg value="--report=full"/>
            <arg value="--standard=phpcs.xml"/>
            <!-- Don't show warnings-->
            <arg value="--warning-severity=0"/>
            <arg value="--extensions=php"/>
            <arg path="/tmp"/>
        </exec>
    </target>

    <target name="phpcpd-ci" description="Find duplicate code using PHPCPD">
        <exec executable="vendor/bin/phpcpd" failonerror="false">
            <arg value="--log-pmd"/>
            <arg value="/test2/etstter/logs/pmd-cpd.xml"/>
            <arg path="/tmp"/>
        </exec>
    </target>

    <target name="phpunit-ci" description="Run unit tests with PHPUnit">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--configuration=${basedir}//home/melvin/WWW/qa-tools/src/Ibuildings/QA/tests/Common/Console/fixtures/phpunit.test"/>
            <arg line="--coverage-html=/test2/etstter/coverage"/>
            <arg line="--log-junit=/test2/etstter/logs/junit.xml"/>
            <arg line="--coverage-clover=/test2/etstter/logs/clover.xml"/>
        </exec>
    </target>


    <!-- Running Behat on jenkins -->
    <target name="behat-ci">
        <exec executable="php" failonerror="true">
            <arg line="vendor/bin/behat --config ./behat.yml --profile ci ${basedir}/features --tags=~skip" />
        </exec>
    </target>

</project>
